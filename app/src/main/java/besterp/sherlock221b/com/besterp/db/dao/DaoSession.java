package besterp.sherlock221b.com.besterp.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import besterp.sherlock221b.com.besterp.db.model.Product;
import besterp.sherlock221b.com.besterp.db.model.ProductStandard;
import besterp.sherlock221b.com.besterp.db.model.Custom;
import besterp.sherlock221b.com.besterp.db.model.Store;
import besterp.sherlock221b.com.besterp.db.model.SaleAccount;
import besterp.sherlock221b.com.besterp.db.model.PurchaserAccount;

import besterp.sherlock221b.com.besterp.db.dao.ProductDao;
import besterp.sherlock221b.com.besterp.db.dao.ProductStandardDao;
import besterp.sherlock221b.com.besterp.db.dao.CustomDao;
import besterp.sherlock221b.com.besterp.db.dao.StoreDao;
import besterp.sherlock221b.com.besterp.db.dao.SaleAccountDao;
import besterp.sherlock221b.com.besterp.db.dao.PurchaserAccountDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig productDaoConfig;
    private final DaoConfig productStandardDaoConfig;
    private final DaoConfig customDaoConfig;
    private final DaoConfig storeDaoConfig;
    private final DaoConfig saleAccountDaoConfig;
    private final DaoConfig purchaserAccountDaoConfig;

    private final ProductDao productDao;
    private final ProductStandardDao productStandardDao;
    private final CustomDao customDao;
    private final StoreDao storeDao;
    private final SaleAccountDao saleAccountDao;
    private final PurchaserAccountDao purchaserAccountDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        productDaoConfig = daoConfigMap.get(ProductDao.class).clone();
        productDaoConfig.initIdentityScope(type);

        productStandardDaoConfig = daoConfigMap.get(ProductStandardDao.class).clone();
        productStandardDaoConfig.initIdentityScope(type);

        customDaoConfig = daoConfigMap.get(CustomDao.class).clone();
        customDaoConfig.initIdentityScope(type);

        storeDaoConfig = daoConfigMap.get(StoreDao.class).clone();
        storeDaoConfig.initIdentityScope(type);

        saleAccountDaoConfig = daoConfigMap.get(SaleAccountDao.class).clone();
        saleAccountDaoConfig.initIdentityScope(type);

        purchaserAccountDaoConfig = daoConfigMap.get(PurchaserAccountDao.class).clone();
        purchaserAccountDaoConfig.initIdentityScope(type);

        productDao = new ProductDao(productDaoConfig, this);
        productStandardDao = new ProductStandardDao(productStandardDaoConfig, this);
        customDao = new CustomDao(customDaoConfig, this);
        storeDao = new StoreDao(storeDaoConfig, this);
        saleAccountDao = new SaleAccountDao(saleAccountDaoConfig, this);
        purchaserAccountDao = new PurchaserAccountDao(purchaserAccountDaoConfig, this);

        registerDao(Product.class, productDao);
        registerDao(ProductStandard.class, productStandardDao);
        registerDao(Custom.class, customDao);
        registerDao(Store.class, storeDao);
        registerDao(SaleAccount.class, saleAccountDao);
        registerDao(PurchaserAccount.class, purchaserAccountDao);
    }
    
    public void clear() {
        productDaoConfig.getIdentityScope().clear();
        productStandardDaoConfig.getIdentityScope().clear();
        customDaoConfig.getIdentityScope().clear();
        storeDaoConfig.getIdentityScope().clear();
        saleAccountDaoConfig.getIdentityScope().clear();
        purchaserAccountDaoConfig.getIdentityScope().clear();
    }

    public ProductDao getProductDao() {
        return productDao;
    }

    public ProductStandardDao getProductStandardDao() {
        return productStandardDao;
    }

    public CustomDao getCustomDao() {
        return customDao;
    }

    public StoreDao getStoreDao() {
        return storeDao;
    }

    public SaleAccountDao getSaleAccountDao() {
        return saleAccountDao;
    }

    public PurchaserAccountDao getPurchaserAccountDao() {
        return purchaserAccountDao;
    }

}
